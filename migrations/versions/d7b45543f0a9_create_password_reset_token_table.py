"""create password reset token table

Revision ID: d7b45543f0a9
Revises: 72de7e730e25
Create Date: 2025-09-23 16:15:45.158050

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

revision: str = "d7b45543f0a9"
down_revision: Union[str, Sequence[str], None] = "72de7e730e25"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "seat",
        "status",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "seat",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "seat",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(op.f("seat_code_key"), "seat", type_="unique")
    op.create_index(op.f("ix_seat_code"), "seat", ["code"], unique=True)
    op.create_index(op.f("ix_seat_id"), "seat", ["id"], unique=False)
    op.create_foreign_key(None, "seat", "user", ["user_id"], ["id"])
    op.alter_column(
        "user",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "user",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(op.f("user_email_key"), "user", type_="unique")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_phone_number"), "user", ["phone_number"], unique=False
    )


def downgrade() -> None:
    """Downgrade schema."""
    op.drop_index(op.f("ix_user_phone_number"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_unique_constraint(
        op.f("user_email_key"), "user", ["email"], postgresql_nulls_not_distinct=False
    )
    op.alter_column(
        "user",
        "updated_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "user",
        "created_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(None, "seat", type_="foreignkey")
    op.drop_index(op.f("ix_seat_id"), table_name="seat")
    op.drop_index(op.f("ix_seat_code"), table_name="seat")
    op.create_unique_constraint(
        op.f("seat_code_key"), "seat", ["code"], postgresql_nulls_not_distinct=False
    )
    op.alter_column(
        "seat",
        "updated_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "seat",
        "created_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "seat",
        "status",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
